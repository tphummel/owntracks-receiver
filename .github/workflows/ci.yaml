name: Go

on:
  push:
    branches:
      - "*"
  workflow_dispatch:
    inputs:
      rollback_version:
        description: 'Rollback to this version'
        required: false

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.20
    - name: Check out code
      uses: actions/checkout@v2
    - name: Test
      run: go test -v ./...

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.20
    - name: Check out code
      uses: actions/checkout@v2
    - name: Build
      run: go build -v -o my-binary
    - name: Upload binary
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v2
      with:
        name: my-binary
        path: my-binary

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Download binary
      uses: actions/download-artifact@v2
      with:
        name: my-binary
        path: .
    - name: Set the current date and short Git SHA
      id: date-and-sha
      run: |
        echo "::set-output name=current_date::$(date +'%Y-%m-%d')"
        echo "::set-output name=short_sha::$(echo ${GITHUB_SHA} | cut -c1-5)"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.date-and-sha.outputs.current_date }}-${{ steps.date-and-sha.outputs.short_sha }}
        release_name: Release ${{ steps.date-and-sha.outputs.current_date }}-${{ steps.date-and-sha.outputs.short_sha }}
        body: Auto-generated release
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./my-binary
        asset_name: my-binary
        asset_content_type: application/octet-stream

  deploy:
    runs-on: ubuntu-latest
    needs: release
    if: (github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch') && github.ref == 'never-run/skipping-for-now'
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install Ansible and Ansistrano
      run: pip install ansible ansistrano-deploy ansistrano-rollback
    - name: Set up SSH key
      run: echo "${{ secrets.SSH_PRIVATE_KEY }}" > id_rsa && chmod 600 id_rsa
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
    - name: Deploy with Ansistrano
      run: |
        export ANSIBLE_HOST_KEY_CHECKING=False
        export ANSIBLE_PYTHON_INTERPRETER=/usr/bin/python3
        export ROLLBACK_VERSION=${{ github.event.inputs.rollback_version }}

        if [ -z "$ROLLBACK_VERSION" ]; then
          echo "Performing normal deploy"
          ansible-playbook -i 'anytracks.lab.tomhummel.com,' ansible/deploy.yml --private-key id_rsa
        else
          echo "Performing rollback to version $ROLLBACK_VERSION"
          ansible-playbook -i 'anytracks.lab.tomhummel.com,' ansible/rollback.yml --private-key id_rsa --extra-vars "rollback_version=$ROLLBACK_VERSION"
        fi

